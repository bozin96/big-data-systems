version: "3"

services:
  # BigData3 - Java spark ML
  ml-batch:
    build: ./ml-batch
    image: big-data_ml-batch:latest
    container_name: ml-batch
    depends_on:
      - namenode
      - spark-master
    environment:
      HDFS_URL: hdfs://namenode:9000
      APP_ARGS_CSV_FILE_PATH: /big-data/data.csv
      SPARK_MASTER_NAME: spark-master
      SPARK_MASTER_PORT: 7077
      SPARK_APPLICATION_ARGS: ""
      ENABLE_INIT_DAEMON: "false"
  # ml-streaming:
  #   build: ./ml-streaming
  #   image: big-data_ml-streaming:latest
  #   container_name: ml-streaming
  #   depends_on:
  #     - spark-master
  #     - kafka
  #   environment:
  #     INITIAL_SLEEP_TIME_IN_SECONDS: 30
  #     SPARK_MASTER_NAME: spark-master
  #     SPARK_MASTER_PORT: 7077
  #     SPARK_APPLICATION_ARGS: ""
  #     KAFKA_URL: kafka:9092
  #     ENABLE_INIT_DAEMON: "false"
  #     DATA_RECEIVING_TIME_IN_SECONDS: 30
  # streaming-producer:
  #   build: ./streaming-producer
  #   image: big-data_streaming-producer:latest
  #   container_name: streaming-producer
  #   depends_on:
  #     - namenode
  #     - kafka
  #   environment:
  #     INITIAL_SLEEP_TIME_IN_SECONDS: 30
  #     HDFS_URL: hdfs://namenode:9000
  #     CSV_FILE_PATH: /big-data/data.csv
  #     KAFKA_URL: kafka:9092
  #     DATA_SENDING_TIME_IN_SECONDS: 1

  # KAFKA
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.4.0
    container_name: kafka
    expose:
      - "9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka

  # SPARK
  spark-master:
    image: bde2020/spark-master:2.4.3-hadoop2.7
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=false
  spark-worker-1:
    image: bde2020/spark-worker:2.4.3-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - spark-master
    # ports:
    #  - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
  spark-worker-2:
    image: bde2020/spark-worker:2.4.3-hadoop2.7
    container_name: spark-worker-2
    depends_on:
      - spark-master
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  # HADOOP
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./big-data/data.csv:/big-data/data.csv
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    depends_on:
      - namenode
      - datanode
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
