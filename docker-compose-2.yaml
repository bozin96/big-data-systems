version: "3"

services:
  # BigData2 - Java spark streaming
  streaming-consumer:
    build: ./streaming-consumer
    image: big-data_streaming-consumer:latest
    container_name: streaming-consumer
    depends_on: 
      - spark-master
      - kafka
      - cassandra
    environment: 
      INITIAL_SLEEP_TIME_IN_SECONDS: 30
      SPARK_MASTER_NAME: spark-master
      SPARK_MASTER_PORT: 7077
      SPARK_APPLICATION_ARGS: ''
      CASSANDRA_URL: cassandra
      CASSANDRA_PORT: 9042
      KAFKA_URL: kafka:9092
      ENABLE_INIT_DAEMON: 'false'
      DATA_RECEIVING_TIME_IN_SECONDS: 30
  streaming-producer:
    build: ./streaming-producer
    image: big-data_streaming-producer:latest
    container_name: streaming-producer
    depends_on: 
      - namenode
      - kafka
    environment:
      INITIAL_SLEEP_TIME_IN_SECONDS: 30
      HDFS_URL: hdfs://namenode:9000
      CSV_FILE_PATH: /big-data/data.csv
      KAFKA_URL: kafka:9092
      DATA_SENDING_TIME_IN_SECONDS: 1
      
  # CASSANDRA
  cassandra:
    image: cassandra
    container_name: cassandra
    expose:
      - "9042"
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
  # cassandra:
  #   image: bitnami/cassandra:latest
  #   ports:
  #     - '9042:9042'
  #   environment: 
  #     - CASSANDRA_SEEDS=cassandra
  #     - CASSANDRA_PASSWORD_SEEDER=yes
  #     - CASSANDRA_PASSWORD=cassandra
  #   volumes:
  #     - cassandra_data:/bitnami
  # cassandra-web:
  #   image: delermando/docker-cassandra-web:v0.4.0
  #   environment:
  #     - CASSANDRA_HOST=cassandra
  #     - CASSANDRA_HOST_IP=cassandra
  #     - CASSANDRA_PORT=9042
  #   ports: 
  #     - "3000:3000"
  #   depends_on: 
  #     - cassandra
  # cassandra-web:
  #   image: metavige/cassandra-web
  #   ports:
  #       - 3000:3000
  #   expose:
  #       - "3000"
  #   environment:
  #       - CASSANDRA_HOST=cassandra
  #       - CASSANDRA_USER=cassandra
  #       - CASSANDRA_PASSWORD=cassandra
  #       - WEB_UI_PORT=80
  #   restart: always
  #   depends_on:
  #       - cassandra
  # cassandra-web:
  #   image: ipushc/cassandra-web
  #   ports:
  #       - 3000:3000
  #   expose:
  #       - "3000"
  #   environment:
  #       - CASSANDRA_HOST=cassandra:9042
  #       - CASSANDRA_PORT=9042
  #       - CASSANDRA_USER=cassandra
  #       - CASSANDRA_PASSWORD=cassandra
  #       - HOST_PORT=80
  #   restart: always
  #   depends_on:
  #       - cassandra     
  # cassandra-web:
  #   image: markusgulden/cassandra-web
  #   depends_on:
  #   - cassandra
  #   environment:
  #     CASSANDRA_HOST_IPS: 127.0.0.1
  #     CASSANDRA_PORT: 9042
  #     CASSANDRA_USER: cassandra
  #     CASSANDRA_PASSWORD: cassandra
  #   ports:
  #   - 3000:3000

  # KAFKA
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.4.0
    container_name: kafka
    expose:
      - "9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka

  # SPARK
  spark-master:
    image: bde2020/spark-master:2.4.3-hadoop2.7
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=false
  spark-worker-1:
    image: bde2020/spark-worker:2.4.3-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - spark-master
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
  spark-worker-2:
    image: bde2020/spark-worker:2.4.3-hadoop2.7
    container_name: spark-worker-2
    depends_on:
      - spark-master
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  # HADOOP
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./big-data/data.csv:/big-data/data.csv
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    depends_on: 
      - namenode
      - datanode
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    depends_on: 
      - namenode
      - datanode
      - resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    depends_on: 
      - namenode
      - datanode
      - resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
  
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  cassandra_data: